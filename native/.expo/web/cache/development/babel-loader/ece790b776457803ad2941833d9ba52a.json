{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/a/Projects/frontend-assignment/native/navigation/BottomTabNavigator.tsx\";\n\nimport * as React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { TodoScreen, CompletedScreen } from \"../screens\";\nvar BottomTab = createBottomTabNavigator();\nexport var BottomTabNavigator = function BottomTabNavigator(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Todo\",\n    tabBarOptions: {\n      showLabel: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Todo\",\n    component: TodoNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(TabBarIcon, {\n          name: \"clipboard-outline\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Completed\",\n    component: CompletedNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(TabBarIcon, {\n          name: \"checkbox-outline\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction TabBarIcon(props) {\n  return React.createElement(Ionicons, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar TodoStack = createStackNavigator();\n\nfunction TodoNavigator() {\n  return React.createElement(TodoStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(TodoStack.Screen, {\n    name: \"TodoScreen\",\n    component: TodoScreen,\n    options: {\n      headerTitle: 'Todos'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar CompletedStack = createStackNavigator();\n\nfunction CompletedNavigator() {\n  return React.createElement(CompletedStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(CompletedStack.Screen, {\n    name: \"CompletedScreen\",\n    component: CompletedScreen,\n    options: {\n      headerTitle: 'Completed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/a/Projects/frontend-assignment/native/navigation/BottomTabNavigator.tsx"],"names":["React","Ionicons","createBottomTabNavigator","createStackNavigator","TodoScreen","CompletedScreen","BottomTab","BottomTabNavigator","children","props","showLabel","TodoNavigator","tabBarIcon","color","CompletedNavigator","TabBarIcon","marginBottom","TodoStack","headerTitle","CompletedStack"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,SACEC,UADF,EAEEC,eAFF;AAMA,IAAMC,SAAS,GAAGJ,wBAAwB,EAA1C;AAMA,OAAO,IAAMK,kBAAqD,GAAG,SAAxDA,kBAAwD,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC/F,SACE,oBAAC,SAAD,CAAW,SAAX;AACE,IAAA,gBAAgB,EAAC,MADnB;AAEE,IAAA,aAAa,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEC,aAFb;AAGE,IAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAE;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,eAAe,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAC,mBAAjB;AAAqC,UAAA,KAAK,EAAEA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAAA;AADL,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAUE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAEC,kBAFb;AAGE,IAAA,OAAO,EAAE;AACPF,MAAAA,UAAU,EAAE;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,eAAe,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAC,kBAAjB;AAAoC,UAAA,KAAK,EAAEA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAAA;AADL,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAoBD,CArBM;;AAyBP,SAASE,UAAT,CAAoBN,KAApB,EAAmG;AACjG,SAAO,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,EAAhB;AAAoB,IAAA,KAAK,EAAE;AAAEO,MAAAA,YAAY,EAAE,CAAC;AAAjB;AAA3B,KAAqDP,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAKD,IAAMQ,SAAS,GAAGd,oBAAoB,EAAtC;;AACA,SAASQ,aAAT,GAAyB;AACvB,SACE,oBAAC,SAAD,CAAW,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEP,UAFb;AAGE,IAAA,OAAO,EAAE;AAAEc,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD;;AAED,IAAMC,cAAc,GAAGhB,oBAAoB,EAA3C;;AACA,SAASW,kBAAT,GAA8B;AAC5B,SACE,oBAAC,cAAD,CAAgB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD,CAAgB,MAAhB;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,SAAS,EAAET,eAFb;AAGE,IAAA,OAAO,EAAE;AAAEa,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD","sourcesContent":["import * as React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport {\n  TodoScreen,\n  CompletedScreen\n} from '../screens';\nimport { BottomTabParamList, TodoParamList, CompletedParamList } from '../types';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\ninterface BottomTabNavigatorProps {\n  [x: string]: any\n}\n\nexport const BottomTabNavigator: React.FC<BottomTabNavigatorProps> = ({ children, ...props }) => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Todo\"\n      tabBarOptions={{ showLabel: false }}>\n      <BottomTab.Screen\n        name=\"Todo\"\n        component={TodoNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"clipboard-outline\" color={color} />\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Completed\"\n        component={CompletedNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"checkbox-outline\" color={color} />\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: React.ComponentProps<typeof Ionicons>['name']; color: string }) {\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\n\nconst TodoStack = createStackNavigator<TodoParamList>();\nfunction TodoNavigator() {\n  return (\n    <TodoStack.Navigator>\n      <TodoStack.Screen\n        name=\"TodoScreen\"\n        component={TodoScreen}\n        options={{ headerTitle: 'Todos' }}\n      />\n    </TodoStack.Navigator>\n  );\n}\n\nconst CompletedStack = createStackNavigator<CompletedParamList>();\nfunction CompletedNavigator() {\n  return (\n    <CompletedStack.Navigator>\n      <CompletedStack.Screen\n        name=\"CompletedScreen\"\n        component={CompletedScreen}\n        options={{ headerTitle: 'Completed' }}\n      />\n    </CompletedStack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}