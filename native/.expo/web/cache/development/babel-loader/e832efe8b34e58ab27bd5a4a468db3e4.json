{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/a/Projects/frontend-assignment/native/components/TodoCard.tsx\";\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"./Text\";\nimport { loadTheme } from \"../themes\";\nexport var TodoCard = function TodoCard(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var theme = loadTheme();\n\n  if (props.large) {\n    return null;\n  } else {\n    return React.createElement(View, {\n      style: [theme.smlTodoCard, {\n        backgroundColor: props.color\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: theme.smlTodoCardHeader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: theme.todoTitle,\n      wrap: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, props.title)), React.createElement(Text, {\n      style: theme.description,\n      wrap: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, props.description));\n  }\n};","map":{"version":3,"sources":["/home/a/Projects/frontend-assignment/native/components/TodoCard.tsx"],"names":["React","Text","loadTheme","TodoCard","children","props","theme","large","smlTodoCard","backgroundColor","color","smlTodoCardHeader","todoTitle","title","description"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,IAAT;AACA,SAASC,SAAT;AAOA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC3E,MAAMC,KAAK,GAAGJ,SAAS,EAAvB;;AACA,MAAIG,KAAK,CAACE,KAAV,EAAiB;AACf,WAAO,IAAP;AACD,GAFD,MAGK;AACH,WACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,CACLD,KAAK,CAACE,WADD,EAEL;AACEC,QAAAA,eAAe,EAAEJ,KAAK,CAACK;AADzB,OAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,KAAK,CAACK,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,KAAK,CAACM,SAAnB;AAA8B,MAAA,IAAI,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,KAAK,CAACQ,KADT,CADF,CARF,EAaE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,KAAK,CAACQ,WAAnB;AAAgC,MAAA,IAAI,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,KAAK,CAACS,WADT,CAbF,CADF;AAmBD;AACF,CA1BM","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport { Text } from './Text';\nimport { loadTheme } from '../themes';\nimport { Todo } from '../types';\n\ntype TodoCardProps = Todo & {\n  [x: string]: any;\n}\n\nexport const TodoCard: React.FC<TodoCardProps> = ({ children, ...props }) => {\n  const theme = loadTheme();\n  if (props.large) {\n    return null;\n  }\n  else {\n    return (\n      <View\n        style={[\n          theme.smlTodoCard,\n          {\n            backgroundColor: props.color\n          }\n        ]}\n      >\n        <View style={theme.smlTodoCardHeader}>\n          <Text style={theme.todoTitle} wrap>\n            {props.title}\n          </Text>\n        </View>\n        <Text style={theme.description} wrap>\n          {props.description}\n        </Text>\n      </View>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}