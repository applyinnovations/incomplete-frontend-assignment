{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/a/Projects/frontend-assignment/native/components/Swipeable.tsx\";\n\nimport { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport Animated, { runOnJS, useAnimatedGestureHandler, useAnimatedStyle, useSharedValue, withDelay, withTiming } from 'react-native-reanimated';\nimport { loadTheme } from \"../themes\";\nimport { Row } from \"./Row\";\nexport var Swipeable = function Swipeable(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var theme = loadTheme();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      layout = _React$useState2[0],\n      setLayout = _React$useState2[1];\n\n  var width = (layout == null ? void 0 : layout.width) || 0;\n  var height = (layout == null ? void 0 : layout.height) || 0;\n  var boundaryWidth = width / 2.2;\n  var animationDuration = 250;\n  var translateX = useSharedValue(0);\n  var translateRatio = useSharedValue(0);\n  var onGestureEvent = useAnimatedGestureHandler({\n    onStart: function () {\n      const _f = function (event, context) {};\n\n      _f._closure = {};\n      _f.asString = \"function onStart(event,context){}\";\n      _f.__workletHash = 15632650163644;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onActive: function () {\n      const _f = function (event, context) {\n        if (props.leftEnabled && event.translationX > 0) translateX.value = event.translationX;\n        if (props.rightEnabled && event.translationX < 0) translateX.value = event.translationX;\n        if (event.translationX === 0) translateX.value = event.translationX;\n        translateRatio.value = event.translationX > 0 ? event.translationX / boundaryWidth : -1 * event.translationX / boundaryWidth;\n      };\n\n      _f._closure = {\n        props: {\n          leftEnabled: props.leftEnabled,\n          rightEnabled: props.rightEnabled\n        },\n        translateX,\n        translateRatio,\n        boundaryWidth\n      };\n      _f.asString = \"function onActive(event,context){const{props,translateX,translateRatio,boundaryWidth}=jsThis._closure;{if(props.leftEnabled&&event.translationX>0)translateX.value=event.translationX;if(props.rightEnabled&&event.translationX<0)translateX.value=event.translationX;if(event.translationX===0)translateX.value=event.translationX;translateRatio.value=event.translationX>0?event.translationX/boundaryWidth:-1*event.translationX/boundaryWidth;}}\";\n      _f.__workletHash = 14662735311366;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onEnd: function () {\n      const _f = function (event) {\n        if (Math.abs(translateX.value) < boundaryWidth) {\n          translateX.value = withTiming(0, {\n            duration: animationDuration\n          });\n        } else if (translateX.value > 0) {\n          translateX.value = withTiming(width, {\n            duration: animationDuration\n          }, function () {\n            const _f = function (isFinished) {\n              runOnJS(props.onSwipeRight)(isFinished);\n              translateX.value = withDelay(animationDuration, withTiming(0));\n            };\n\n            _f._closure = {\n              runOnJS,\n              props: {\n                onSwipeRight: props.onSwipeRight\n              },\n              translateX,\n              withDelay,\n              animationDuration,\n              withTiming\n            };\n            _f.asString = \"function _f(isFinished){const{runOnJS,props,translateX,withDelay,animationDuration,withTiming}=jsThis._closure;{runOnJS(props.onSwipeRight)(isFinished);translateX.value=withDelay(animationDuration,withTiming(0));}}\";\n            _f.__workletHash = 2520975438104;\n\n            global.__reanimatedWorkletInit(_f);\n\n            return _f;\n          }());\n        } else {\n          translateX.value = withTiming(-width, {\n            duration: animationDuration\n          }, function () {\n            const _f = function (isFinished) {\n              runOnJS(props.onSwipeLeft)(isFinished);\n              translateX.value = withDelay(animationDuration, withTiming(0));\n            };\n\n            _f._closure = {\n              runOnJS,\n              props: {\n                onSwipeLeft: props.onSwipeLeft\n              },\n              translateX,\n              withDelay,\n              animationDuration,\n              withTiming\n            };\n            _f.asString = \"function _f(isFinished){const{runOnJS,props,translateX,withDelay,animationDuration,withTiming}=jsThis._closure;{runOnJS(props.onSwipeLeft)(isFinished);translateX.value=withDelay(animationDuration,withTiming(0));}}\";\n            _f.__workletHash = 2436013184515;\n\n            global.__reanimatedWorkletInit(_f);\n\n            return _f;\n          }());\n        }\n      };\n\n      _f._closure = {\n        translateX,\n        boundaryWidth,\n        withTiming,\n        animationDuration,\n        width,\n        runOnJS,\n        props: {\n          onSwipeRight: props.onSwipeRight,\n          onSwipeLeft: props.onSwipeLeft\n        },\n        withDelay\n      };\n      _f.asString = \"function onEnd(event){const{translateX,boundaryWidth,withTiming,animationDuration,width,runOnJS,props,withDelay}=jsThis._closure;{if(Math.abs(translateX.value)<boundaryWidth){translateX.value=withTiming(0,{duration:animationDuration});}else if(translateX.value>0){translateX.value=withTiming(width,{duration:animationDuration},function(){const _f=function(isFinished){runOnJS(props.onSwipeRight)(isFinished);translateX.value=withDelay(animationDuration,withTiming(0));};_f._closure={runOnJS,props:{onSwipeRight:props.onSwipeRight},translateX,withDelay,animationDuration,withTiming};_f.asString=\\\"function _f(isFinished){const{runOnJS,props,translateX,withDelay,animationDuration,withTiming}=jsThis._closure;{runOnJS(props.onSwipeRight)(isFinished);translateX.value=withDelay(animationDuration,withTiming(0));}}\\\";_f.__workletHash=2520975438104;global.__reanimatedWorkletInit(_f);return _f;}());}else{translateX.value=withTiming(-width,{duration:animationDuration},function(){const _f=function(isFinished){runOnJS(props.onSwipeLeft)(isFinished);translateX.value=withDelay(animationDuration,withTiming(0));};_f._closure={runOnJS,props:{onSwipeLeft:props.onSwipeLeft},translateX,withDelay,animationDuration,withTiming};_f.asString=\\\"function _f(isFinished){const{runOnJS,props,translateX,withDelay,animationDuration,withTiming}=jsThis._closure;{runOnJS(props.onSwipeLeft)(isFinished);translateX.value=withDelay(animationDuration,withTiming(0));}}\\\";_f.__workletHash=2436013184515;global.__reanimatedWorkletInit(_f);return _f;}());}}}\";\n      _f.__workletHash = 6216881987005;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }()\n  });\n  var sliderStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          translateX: translateX.value\n        }]\n      };\n    };\n\n    _f._closure = {\n      translateX\n    };\n    _f.asString = \"function _f(){const{translateX}=jsThis._closure;{return{transform:[{translateX:translateX.value}]};}}\";\n    _f.__workletHash = 5449807444231;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var leftIconStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        opacity: translateX.value < 0 ? 0 : 1,\n        transform: [{\n          scale: translateRatio.value > 0.75 ? 1 : translateRatio.value + 0.25\n        }]\n      };\n    };\n\n    _f._closure = {\n      translateX,\n      translateRatio\n    };\n    _f.asString = \"function _f(){const{translateX,translateRatio}=jsThis._closure;{return{opacity:translateX.value<0?0:1,transform:[{scale:translateRatio.value>0.75?1:translateRatio.value+0.25}]};}}\";\n    _f.__workletHash = 5358738458633;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var rightIconStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        opacity: translateX.value > 0 ? 0 : 1,\n        transform: [{\n          scale: translateRatio.value > 0.75 ? 1 : translateRatio.value + 0.25\n        }]\n      };\n    };\n\n    _f._closure = {\n      translateX,\n      translateRatio\n    };\n    _f.asString = \"function _f(){const{translateX,translateRatio}=jsThis._closure;{return{opacity:translateX.value>0?0:1,transform:[{scale:translateRatio.value>0.75?1:translateRatio.value+0.25}]};}}\";\n    _f.__workletHash = 12961818333515;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width,\n      height: height,\n      position: 'absolute'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(Row, {\n    style: {\n      alignItems: 'center',\n      height: height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [leftIconStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: props.leftIconName,\n    size: height / 3,\n    color: props.leftIconColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), React.createElement(Animated.View, {\n    style: [rightIconStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: props.rightIconName,\n    size: height / 3,\n    color: props.rightIconColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })))), React.createElement(PanGestureHandler, {\n    onGestureEvent: onGestureEvent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(Animated.View, {\n    style: sliderStyle,\n    onLayout: function onLayout(e) {\n      return setLayout(e.nativeEvent.layout);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, children)));\n};","map":{"version":3,"sources":["/home/a/Projects/frontend-assignment/native/components/Swipeable.tsx"],"names":["Ionicons","React","PanGestureHandler","Animated","runOnJS","useAnimatedGestureHandler","useAnimatedStyle","useSharedValue","withDelay","withTiming","loadTheme","Row","Swipeable","children","props","theme","useState","layout","setLayout","width","height","boundaryWidth","animationDuration","translateX","translateRatio","onGestureEvent","onStart","event","context","onActive","leftEnabled","translationX","value","rightEnabled","onEnd","Math","abs","duration","isFinished","onSwipeRight","onSwipeLeft","sliderStyle","transform","leftIconStyle","opacity","scale","rightIconStyle","position","alignItems","leftIconName","leftIconColor","rightIconName","rightIconColor","e","nativeEvent"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { LayoutRectangle, View } from 'react-native';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport Animated, { runOnJS, useAnimatedGestureHandler, useAnimatedStyle, useSharedValue, withDecay, withDelay, withTiming } from 'react-native-reanimated';\nimport { loadTheme } from '../themes';\nimport { Row } from './Row';\n\n\n\ninterface SwipeableProps {\n  onSwipeRight: (isFinished: boolean) => void;\n  onSwipeLeft: (isFinished: boolean) => void;\n  rightEnabled: boolean;\n  rightIconName: any;\n  rightIconColor: string;\n  leftEnabled: boolean;\n  leftIconName: any;\n  leftIconColor: string;\n  [x: string]: any\n}\n\ninterface AnimationContext {\n  offsetX?: number;\n}\n\nexport const Swipeable: React.FC<SwipeableProps> = ({ children, ...props }) => {\n  const theme = loadTheme();\n  const [layout, setLayout] = React.useState<LayoutRectangle>();\n  const width = (layout?.width || 0);\n  const height = (layout?.height || 0);\n  const boundaryWidth =  width / 2.2;\n  const animationDuration = 250;\n  const translateX = useSharedValue(0);\n  const translateRatio = useSharedValue(0);\n  const onGestureEvent = useAnimatedGestureHandler({\n    onStart: (event, context: AnimationContext) => {},\n    onActive: (event, context: AnimationContext) => {\n      if (props.leftEnabled && event.translationX > 0) translateX.value = event.translationX;\n      if (props.rightEnabled && event.translationX < 0) translateX.value = event.translationX;\n      if (event.translationX === 0) translateX.value = event.translationX;\n      translateRatio.value = event.translationX > 0 ? event.translationX / boundaryWidth : -1 * event.translationX / boundaryWidth;\n    },\n    onEnd: (event) => {\n      if (Math.abs(translateX.value) < boundaryWidth) {\n        translateX.value = withTiming(0, { \n          duration: animationDuration\n        })\n      }\n      else if (translateX.value > 0) {\n        translateX.value = withTiming(width, { \n          duration: animationDuration\n        }, (isFinished) => {\n          runOnJS(props.onSwipeRight)(isFinished)\n          translateX.value = withDelay(animationDuration, withTiming(0));\n        })\n      }\n      else {\n        translateX.value = withTiming(-width, { \n          duration: animationDuration\n        }, (isFinished) => {\n          runOnJS(props.onSwipeLeft)(isFinished);\n          translateX.value = withDelay(animationDuration, withTiming(0));\n        })\n      }\n    }\n  });\n  const sliderStyle = useAnimatedStyle(() => ({\n    transform: [{\n      translateX: translateX.value\n    }]\n  }))\n  const leftIconStyle = useAnimatedStyle(() => ({\n    opacity: translateX.value < 0 ? 0 : 1,\n    transform: [{\n      scale: translateRatio.value > 0.75 ? 1 : translateRatio.value + 0.25\n    }]\n  }))\n  const rightIconStyle = useAnimatedStyle(() => ({\n    opacity: translateX.value > 0 ? 0 : 1,\n    transform: [{\n      scale: translateRatio.value > 0.75 ? 1 : translateRatio.value + 0.25\n    }]\n  }))\n  return (\n    <View>\n      <View style={{\n        width: width,\n        height: height,\n        position: 'absolute'\n      }}\n      >\n        <Row style={{ alignItems: 'center', height: height }}\n        >\n          <Animated.View style={[leftIconStyle]}>\n            <Ionicons\n              name={props.leftIconName}\n              size={(height / 3)}\n              color={props.leftIconColor}\n            />\n          </Animated.View>\n          <Animated.View style={[rightIconStyle]}>\n            <Ionicons\n              name={props.rightIconName}\n              size={(height / 3)}\n              color={props.rightIconColor}\n            />\n          </Animated.View>\n        </Row>\n      </View>\n      <PanGestureHandler { ...{ onGestureEvent }}>\n        <Animated.View style={sliderStyle} onLayout={(e) => setLayout(e.nativeEvent.layout)}>\n          {children}\n        </Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n}"]},"metadata":{},"sourceType":"module"}