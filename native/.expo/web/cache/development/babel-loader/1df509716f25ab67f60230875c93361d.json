{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/a/Projects/frontend-assignment/native/screens/CreateTodoModal.tsx\";\n\nimport * as React from 'react';\nimport { Frame, TextButton, Text, TextInput, Row, backend, Picker } from \"../components\";\nimport { loadTheme } from \"../themes\";\nexport var CreateTodoModal = function CreateTodoModal(_ref) {\n  var navigation = _ref.navigation,\n      props = _objectWithoutProperties(_ref, [\"navigation\"]);\n\n  var theme = loadTheme();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      title = _React$useState2[0],\n      setTitle = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      description = _React$useState4[0],\n      setDescription = _React$useState4[1];\n\n  var _React$useState5 = React.useState(new Date()),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      date = _React$useState6[0],\n      setDate = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      category = _React$useState8[0],\n      setCategory = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      categories = _React$useState10[0],\n      setCategories = _React$useState10[1];\n\n  React.useEffect(function () {\n    backend.getCategories().then(function (data) {\n      setCategories(data);\n      setCategory(data[0]);\n    });\n  }, []);\n  return React.createElement(Frame, {\n    modal: true,\n    scroll: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(TextButton, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: theme.modalButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Close\"), React.createElement(TextButton, {\n    onPress: function onPress() {\n      if (category) {\n        backend.addTodo({\n          title: title,\n          description: description,\n          date: date,\n          category: category,\n          completed: false\n        });\n        navigation.goBack();\n      }\n    },\n    style: theme.modalButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Add\")), React.createElement(Text, {\n    style: theme.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Create a new Todo\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    placeholder: \"title\",\n    autocorrect: true,\n    autoFocus: true,\n    autoCapitalize: \"sentences\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    placeholder: \"description\",\n    autocorrect: true,\n    multiline: true,\n    autoCapitalize: \"sentences\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker, {\n    items: categories.map(function (c) {\n      return {\n        name: c.id,\n        value: c\n      };\n    }),\n    onChange: setCategory,\n    value: category == null ? void 0 : category.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker, {\n    date: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/a/Projects/frontend-assignment/native/screens/CreateTodoModal.tsx"],"names":["React","Frame","TextButton","Text","TextInput","Row","backend","Picker","loadTheme","CreateTodoModal","navigation","props","theme","useState","title","setTitle","description","setDescription","Date","date","setDate","category","setCategory","categories","setCategories","useEffect","getCategories","then","data","goBack","modalButton","addTodo","completed","text","map","c","name","id","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Frame, TextButton, Text, TextInput, Row, backend, Picker } from '../components';\n\nimport { loadTheme } from '../themes';\nimport { Category } from '../types';\n\ninterface CreateTodoModalProps {\n  [x: string]: any\n}\n\nexport const CreateTodoModal: React.FC<CreateTodoModalProps> = ({ navigation, ...props }) => {\n\n  const theme = loadTheme();\n  const [title, setTitle] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [date, setDate] = React.useState(new Date());\n  const [category, setCategory] = React.useState<Category>();\n  const [categories, setCategories] = React.useState<Array<Category>>([]);\n  React.useEffect(() => {\n    backend.getCategories().then(data => {\n      setCategories(data);\n      setCategory(data[0]);\n    });\n  }, []);\n  return (\n    <Frame modal scroll>\n      <Row>\n        <TextButton\n          onPress={() => navigation.goBack()}\n          style={theme.modalButton}\n        >\n          Close\n        </TextButton>\n        <TextButton\n          onPress={() => {\n            if (category) {\n              backend.addTodo({\n                title, \n                description,\n                date,\n                category,\n                completed: false\n              });\n              navigation.goBack();\n            }\n          }}\n          style={theme.modalButton}\n        >\n          Add\n        </TextButton>\n      </Row>\n      <Text\n        style={theme.title}\n      >\n        Create a new Todo\n      </Text>\n      <TextInput\n        onChangeText={(text: string) => setTitle(text)}\n        placeholder='title'\n        autocorrect\n        autoFocus\n        autoCapitalize='sentences'\n      />\n      <TextInput\n        onChangeText={(text: string) => setDescription(text)}\n        placeholder='description'\n        autocorrect\n        multiline\n        autoCapitalize='sentences'\n      />\n      <Picker\n        items={categories.map(c => ({ name: c.id, value: c }))}\n        onChange={setCategory}\n        value={category?.id}\n      />\n      <Picker date></Picker>\n    </Frame>\n  );\n}"]},"metadata":{},"sourceType":"module"}