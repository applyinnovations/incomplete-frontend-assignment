{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar UPDATE_DELAY = 0;\n\nvar Backend = function () {\n  function Backend() {\n    var _this = this;\n\n    _classCallCheck(this, Backend);\n\n    var data = require(\"../assets/data/todos.json\");\n\n    this.data = data.map(function (todo, i) {\n      return {\n        id: todo.id || _this._genId(),\n        title: todo.title,\n        completed: todo.completed,\n        description: todo.description,\n        date: new Date(todo.date),\n        category: todo.category\n      };\n    });\n    this.callbacks = [];\n  }\n\n  _createClass(Backend, [{\n    key: \"_getStatus\",\n    value: function _getStatus(todo) {\n      var date_status = 'Upcoming';\n      if (Math.abs(todo.date.getTime() - Date.now()) < 8.64e+7) date_status = 'Today';else if (todo.date.getTime() < Date.now()) date_status = 'Overdue';\n      if (todo.completed) date_status = 'Completed';\n      return date_status;\n    }\n  }, {\n    key: \"_getColor\",\n    value: function _getColor(todo) {\n      var status = this._getStatus(todo);\n\n      var color = 'rgb(200, 252, 205)';\n      if (status === 'Upcoming') color = 'rgb(193, 224, 252)';\n      if (status === 'Today') color = 'rgb(193, 224, 252)';\n      if (status === 'Overdue') color = 'rgb(245, 184, 188)';\n      return color;\n    }\n  }, {\n    key: \"_prepareTodo\",\n    value: function _prepareTodo(todo) {\n      return _objectSpread(_objectSpread({}, todo), {}, {\n        status: this._getStatus(todo),\n        color: this._getColor(todo)\n      });\n    }\n  }, {\n    key: \"_genId\",\n    value: function _genId() {\n      return Math.floor(Math.random() * 10000000000);\n    }\n  }, {\n    key: \"_getIndexOfTodo\",\n    value: function _getIndexOfTodo(id) {\n      return this.data.map(function (t) {\n        return t.id;\n      }).indexOf(id);\n    }\n  }, {\n    key: \"addTodo\",\n    value: function addTodo(todo) {\n      var newTodo = _objectSpread({\n        id: this._genId(),\n        order: this.data.length\n      }, todo);\n\n      this.data.push(newTodo);\n\n      this._publishTodos();\n    }\n  }, {\n    key: \"getTodos\",\n    value: function getTodos() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          resolve(_toConsumableArray(_this2.data));\n        }, Math.random() * UPDATE_DELAY);\n      });\n    }\n  }, {\n    key: \"subscribeTodos\",\n    value: function subscribeTodos(callback) {\n      this.callbacks.push(callback);\n    }\n  }, {\n    key: \"_publishTodos\",\n    value: function _publishTodos() {\n      var _this3 = this;\n\n      this.getTodos().then(function (data) {\n        return _this3.callbacks.map(function (c) {\n          return c(data);\n        });\n      });\n    }\n  }, {\n    key: \"editTodo\",\n    value: function editTodo(todo) {\n      var index = this._getIndexOfTodo(todo.id);\n\n      this.data[index] = _objectSpread(_objectSpread({}, this.data[index]), todo);\n\n      this._publishTodos();\n    }\n  }, {\n    key: \"deleteTodo\",\n    value: function deleteTodo(id) {\n      var index = this._getIndexOfTodo(id);\n\n      ~index && this.data.splice(index, 1);\n\n      this._publishTodos();\n    }\n  }, {\n    key: \"getCategories\",\n    value: function getCategories() {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          resolve(_this4.data.map(function (todo) {\n            return todo.category;\n          }));\n        }, Math.random() * UPDATE_DELAY);\n      });\n    }\n  }]);\n\n  return Backend;\n}();\n\nexport var backend = new Backend();","map":{"version":3,"sources":["/home/a/Projects/frontend-assignment/native/components/Backend.tsx"],"names":["UPDATE_DELAY","Backend","data","require","map","todo","i","id","_genId","title","completed","description","date","Date","category","callbacks","date_status","Math","abs","getTime","now","status","_getStatus","color","_getColor","floor","random","t","indexOf","newTodo","order","length","push","_publishTodos","Promise","resolve","reject","setTimeout","callback","getTodos","then","c","index","_getIndexOfTodo","splice","backend"],"mappings":"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","sourcesContent":["\nimport {\n    Todo,\n    TodoId,\n    TodoDetails,\n    Category\n} from '../types'\n\n// Please note that the delayed promises in this file are intended please do not remove them. \n// You need to manage the user experience so that the user knows they are waiting \n// use a loading spinner or animation or progress bar. Be creative!\n// Error handling is not part of this assessment, you can assume that operations are always successful.\n\nconst UPDATE_DELAY = 0\n\nclass Backend {\n\n    data: Array<Todo>;\n    callbacks: Array<(todos: Array<Todo>) => any>;\n\n    constructor() {\n      const data = require('../assets/data/todos.json');\n      this.data = data\n      .map((todo: Todo, i: number) => ({\n        id: todo.id || this._genId(),\n        title: todo.title,\n        completed: todo.completed,\n        description: todo.description,\n        date: new Date(todo.date),\n        category: todo.category,\n      }))\n      this.callbacks = [];\n    }\n\n    _getStatus(todo) {\n      let date_status = 'Upcoming';\n      if (Math.abs(todo.date.getTime() - Date.now()) < 8.64e+7) date_status = 'Today';\n      else if (todo.date.getTime() < Date.now()) date_status = 'Overdue';\n      if (todo.completed) date_status = 'Completed';\n      return date_status;\n    }\n\n    _getColor(todo) {\n      const status = this._getStatus(todo);\n      let color = 'rgb(200, 252, 205)';\n      if (status === 'Upcoming') color = 'rgb(193, 224, 252)';\n      if (status === 'Today') color = 'rgb(193, 224, 252)';\n      if (status === 'Overdue') color = 'rgb(245, 184, 188)';\n      return color;\n    }\n\n    _prepareTodo(todo: Todo) { \n      return {\n        ...todo, \n        status: this._getStatus(todo), \n        color: this._getColor(todo)\n      }\n    }\n\n    _genId(): TodoId {\n      return Math.floor(Math.random() * 10000000000);\n    }\n\n    _getIndexOfTodo(id: TodoId): number {\n      return this.data.map(t => t.id).indexOf(id);\n    }\n\n    addTodo(todo: TodoDetails): void {\n      let newTodo = {\n        id: this._genId(),\n        order: this.data.length,\n        ...todo\n      }\n      this.data.push(newTodo);\n      this._publishTodos();\n    }\n\n    getTodos(): Promise<Array<Todo>> {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve([...this.data]);\n        }, Math.random()*UPDATE_DELAY);\n      });\n    }\n\n    subscribeTodos(callback: (todos: Array<Todo>) => any): void {\n      this.callbacks.push(callback);\n    }\n\n    _publishTodos(): void {\n      this.getTodos().then(data => this.callbacks.map((c) => c(data)));\n    }\n\n    editTodo(todo: Todo): void {\n      let index = this._getIndexOfTodo(todo.id);\n      this.data[index] = {\n        ...this.data[index],\n        ...todo\n      }\n      this._publishTodos();\n    }\n\n    deleteTodo(id: TodoId): void {\n      let index = this._getIndexOfTodo(id);\n      ~index && this.data.splice(index, 1);\n      this._publishTodos();\n    }\n\n    getCategories(): Promise<Array<Category>> {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve(this.data.map(todo => todo.category));\n        }, Math.random()*UPDATE_DELAY);\n      });\n    }\n}\n\nexport const backend = new Backend();"]},"metadata":{},"sourceType":"module"}