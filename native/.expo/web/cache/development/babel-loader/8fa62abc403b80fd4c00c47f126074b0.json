{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/a/Projects/frontend-assignment/native/App.tsx\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport { Navigation } from \"./navigation\";\nimport { SplashScreen } from \"./screens\";\n\nvar App = function App(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return React.createElement(SplashScreen, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(SafeAreaProvider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, React.createElement(Navigation, {\n      colorScheme: colorScheme,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), React.createElement(StatusBar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/a/Projects/frontend-assignment/native/App.tsx"],"names":["StatusBar","React","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","SplashScreen","App","children","props","isLoadingComplete","colorScheme"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,SAASC,UAAT;AACA,SAASC,YAAT;;AAMA,IAAMC,GAAuB,GAAG,SAA1BA,GAA0B,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC1D,MAAMC,iBAAiB,GAAGP,kBAAkB,EAA5C;AACA,MAAMQ,WAAW,GAAGP,cAAc,EAAlC;;AAEA,MAAI,CAACM,iBAAL,EAAwB;AACtB,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO;AACL,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAEC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAMD;AACF,CAhBD;;AAkBA,eAAeJ,GAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport { Navigation } from './navigation';\nimport { SplashScreen } from './screens';\n\ninterface AppProps {\n  [x: string]: any\n}\n\nconst App: React.FC<AppProps> = ({ children, ...props }) => {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return (\n      <SplashScreen></SplashScreen>\n    );\n  } else {\n    return (\n      <SafeAreaProvider>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}