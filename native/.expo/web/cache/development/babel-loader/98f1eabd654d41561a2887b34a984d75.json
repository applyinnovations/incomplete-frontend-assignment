{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/a/Projects/frontend-assignment/native/components/TextButton.tsx\";\n\nimport * as React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"./Text\";\nimport { loadTheme } from \"../themes\";\nexport var TextButton = function TextButton(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var theme = loadTheme();\n  return React.createElement(TouchableOpacity, {\n    onPress: props.onPress,\n    style: [theme.button, props.style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: props.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, children));\n};","map":{"version":3,"sources":["/home/a/Projects/frontend-assignment/native/components/TextButton.tsx"],"names":["React","Text","loadTheme","TextButton","children","props","theme","onPress","button","style","textStyle"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,IAAT;AACA,SAASC,SAAT;AAMA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC/E,MAAMC,KAAK,GAAGJ,SAAS,EAAvB;AACA,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAEG,KAAK,CAACE,OADjB;AAEE,IAAA,KAAK,EAAE,CAACD,KAAK,CAACE,MAAP,EAAeH,KAAK,CAACI,KAArB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEJ,KAAK,CAACK,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGN,QAHH,CAJF,CADF;AAYD,CAdM","sourcesContent":["import * as React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Text } from './Text';\nimport { loadTheme } from '../themes';\n\ninterface TextButtonProps {\n  [x: string]: any\n}\n\nexport const TextButton: React.FC<TextButtonProps> = ({ children, ...props }) => {\n  const theme = loadTheme();\n  return (\n    <TouchableOpacity\n      onPress={props.onPress}\n      style={[theme.button, props.style]}\n    >\n      <Text\n        style={props.textStyle}\n      >\n        {children}\n      </Text>\n    </TouchableOpacity>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}